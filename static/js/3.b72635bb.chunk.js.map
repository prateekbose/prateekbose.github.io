{"version":3,"sources":["components/pageNav.js","components/proj-one.png","components/projects/travelaholic/1.JPG","components/projects/hungri/1.JPG","components/projects.js","components/details.js"],"names":["PageNav","prevPage","page","pageName","color","div","className","textClass","textColor","onClick","style","useSpring","from","opacity","to","delay","config","duration","easing","easings","ProjectSection","fontSize","Projects","nextPage","setItemIndex","ProjectImage","ProjOneBack","ProjTwoBack","details","useState","hoverIndex","setHoverIndex","SectionAnimate","transform","ImageAnimate","index","width","height","HeaderAnimate","marginLeft","openItem","map","item","onMouseEnter","onMouseLeave","img","src","alt","Item","itemType","itemIndex","setPrev","html","name","roles","description","mainImage","images","links","text","useEffect","classList","remove","backgroundColor"],"mappings":"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","file":"static/js/3.b72635bb.chunk.js","sourcesContent":["import { animated, useSpring } from 'react-spring'\r\nimport * as easings from 'd3-ease'\r\n\r\nconst PageNav = ({prevPage, page, pageName, color}) => {\r\n\r\n    const BurgerAnimate = () => useSpring({\r\n        from: {\r\n            opacity: 0\r\n        },\r\n        to: {\r\n            opacity: (page === pageName)?1:0\r\n        },\r\n        delay: 1200,\r\n        config: {\r\n            duration: 450,\r\n            easing: easings.easeCubicInOut\r\n        }\r\n    })\r\n\r\n    const textColor = () => {\r\n        var textClass = \"\"\r\n        if(page === \"Item\"){\r\n            textClass = color\r\n        } \r\n        return textClass\r\n    }\r\n\r\n    return (        \r\n        <animated.div className={`section-burger ${textColor()}`} onClick={() => prevPage()} style={BurgerAnimate()}>\r\n            <div className=\"line line1\"></div>\r\n            <div className=\"line line2\"></div>\r\n        </animated.div>\r\n    )\r\n}\r\n\r\nexport default PageNav","export default __webpack_public_path__ + \"static/media/proj-one.f543c2f4.png\";","export default __webpack_public_path__ + \"static/media/1.83a2bc6b.JPG\";","export default __webpack_public_path__ + \"static/media/1.4c2594b4.JPG\";","import React, {useState} from 'react'\r\nimport {animated, useSpring} from 'react-spring'\r\nimport * as easings from 'd3-ease'\r\nimport ProjOneBack from './projects/travelaholic/1.JPG'\r\nimport ProjTwoBack from'./projects/hungri/1.JPG'\r\nimport PageNav from './pageNav'\r\n\r\nconst ProjectSection = ({fontSize, page, prevPage, Projects, nextPage, setItemIndex}) => {  \r\n    const ProjectImage = [ProjOneBack, ProjTwoBack, ProjOneBack, ProjTwoBack]\r\n\r\n    const details = [\"Discover places to travel to, get suggestions for places you could visit as per what you would prefer to do.\", \"Utilize the resources of the city municipality to implement a system to distribute leftovers and wasted food to the hungry and for recyling.\", \"\", \"\"]\r\n\r\n    const [hoverIndex, setHoverIndex] = useState(null)\r\n\r\n    const SectionAnimate = useSpring({\r\n        from: {\r\n            transform: 'translateX(-100vw)',\r\n            opacity: 0\r\n        },\r\n        to: {\r\n            transform: (page === \"Projects\")?'translateX(0vw)':'translateX(-100vw)',\r\n            opacity: (page === \"Projects\")?1:0\r\n        },\r\n        delay: 150,\r\n        config: {\r\n            duration: 1200,\r\n            easing: easings.easeCubic\r\n        }\r\n    })\r\n\r\n    const ImageAnimate = (index) => useSpring({\r\n        from: {\r\n            width: 0,\r\n            opacity: 0,\r\n            height: (18*fontSize)\r\n        },\r\n        to: {\r\n            width: (index === hoverIndex)?(32*fontSize):0,\r\n            opacity: (index === hoverIndex)?1:0,\r\n            height: (18*fontSize)\r\n        },\r\n        config: {\r\n            duration: 450,\r\n            easing: easings.easeCubicInOut\r\n        }\r\n    })   \r\n    \r\n    const HeaderAnimate = (index) => useSpring({\r\n        from: {\r\n            marginLeft: -10,\r\n            opacity: 0\r\n        },\r\n        to: {\r\n            marginLeft: (page === \"Projects\")?0:-10,\r\n            opacity: (page === \"Projects\")?1:0 \r\n        },\r\n        delay: 1050 + (index*150),\r\n        config: {\r\n            duration: 450,\r\n            easing: easings.easeCubic\r\n        }\r\n    })\r\n\r\n    const openItem = () => {\r\n        nextPage(\"Item\")\r\n        setItemIndex(hoverIndex)\r\n    }\r\n\r\n    return (        \r\n        <animated.div className=\"project-section\" style={SectionAnimate}>\r\n            <PageNav prevPage={prevPage} page={page} pageName={\"Projects\"}/>\r\n            <div className=\"project-item-section\">\r\n            {Projects.map((item, index) => (\r\n                <animated.div className=\"project-item\" style={HeaderAnimate(index)} onClick={openItem}>\r\n                    <h1 onMouseEnter={() => setHoverIndex(index)} onMouseLeave={() => setHoverIndex(null)}>{item}</h1>\r\n                    <p>{details[index]}</p>\r\n                    <animated.img src={ProjectImage[index]} alt={`${item} Demo`} style={ImageAnimate(index)}/>\r\n                </animated.div>\r\n            ))}\r\n            </div>\r\n        </animated.div>\r\n    )\r\n}\r\n\r\nexport default ProjectSection","import { useState, useEffect } from 'react'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport * as easings from 'd3-ease'\r\nimport PageNav from './pageNav'\r\nimport ProjOneBack from './proj-one.png'\r\nimport ProjectSection from './projects'\r\n\r\nconst Item = ({itemType, itemIndex, setPrev, fontSize, page, html}) => {\r\n\r\n    const Projects = [{\r\n            name: \"travelaholic\",\r\n            roles: [\"Front-End\", \"Back-End\", \"UI/UX\"],\r\n            description: [\"When you travel, you meet new people, and cultures, go through different experiences (for better or worse), and perhaps even change your perspective on things and life as a whole. You meet new people and visit new places, so you learn and gain information, this shapes you into a better person.\", \"So what I wanted to make was a place where I could get suggestions for places I could visit as per what I would prefer to do. After a place was suggested, I would like to see the details for reference like local places and also the flight fares.\"],\r\n            mainImage: \"./projects/travelaholic/0.png\",\r\n            images: [\"./projects/travelaholic/1.png\", \"./projects/travelaholic/2.png\", \"./projects/travelaholic/3.png\", \"./projects/travelaholic/4.png\"],\r\n            links: [\"https://www.google.com\"],\r\n            color: \"#202020\",\r\n            text: \"#ffffff\"\r\n        },\r\n        {\r\n            name: \"hungri\",\r\n            roles: [\"Front-End\", \"UI/UX\"],\r\n            description: [\"Our project is about creating a platform to help the hungry by relocating the wasted and leftovers from a small house all the way to a large scale party\", \"We created a platform which utilizes the resources of the city municipality to implement a system to distribute leftovers and wasted food to the hungry and also use the wasted food for recyling.\"],\r\n            mainImage: \"./projects/hungri/0.png\",\r\n            images: [\"./projects/hungri/1.png\", \"./projects/hungri/2.png\", \"./projects/hungri/3.png\"],\r\n            links: [\"https://www.google.com\"],\r\n            color: \"#FFD500\",\r\n            text: \"#202020\"\r\n        }]  \r\n    const Works = [{\r\n            name: \"travelaholic\",\r\n            roles: [\"Front-End\", \"Back-End\", \"UI/UX\"],\r\n            mainImage: \"./projects/travelaholic/1.JPG\",\r\n            images: [\"./projects/travelaholic/2.JPG\",\"./projects/travelaholic/3.JPG\"],\r\n            color: \"#202020\",\r\n            text: \"#ffffff\"\r\n        },\r\n        {\r\n            name: \"hungri\",\r\n            roles: [\"Front-End\", \"UI/UX\"],\r\n            mainImage: \"./projects/hungri/1.JPG\",\r\n            images: [\"./projects/hungri/2.JPG\",\"./projects/hungri/3.JPG\"],\r\n            color: \"#FFD500\",\r\n            text: \"#202020\"\r\n        }]  \r\n\r\n    \r\n    var item = {}\r\n    var LinkActive = false\r\n\r\n    if(itemType === \"Projects\"){\r\n        item = Projects\r\n        LinkActive = true\r\n    } else {\r\n        item = Works\r\n    }\r\n\r\n\r\n    const SectionAnimate = useSpring({\r\n        from: {\r\n            transform: 'translateX(-100vw)',\r\n            opacity: 0\r\n        },\r\n        to: {\r\n            transform: (page === \"Item\")?'translateX(0vw)':'translateX(-100vw)',\r\n            opacity: (page === \"Item\")?1:0\r\n        },\r\n        delay: 150,\r\n        config: {\r\n            duration: 1200,\r\n            easing: easings.easeCubic\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        if(page === \"Item\"){\r\n            html.classList.remove('no-scroll')\r\n        }\r\n    })\r\n\r\n    return (\r\n        <animated.div className=\"item-page\" style={SectionAnimate}>            \r\n            <PageNav prevPage={setPrev} page={page} pageName={\"Item\"} color={(Projects[itemIndex].text === \"#ffffff\")?\"light\":\"dark\"}/>\r\n            <div className=\"item-image\" style={{backgroundColor: Projects[itemIndex].color}}>\r\n                <h1 style={{color: Projects[itemIndex].text}}>{item[itemIndex].name}</h1>\r\n                <img src={item[itemIndex].mainImage} alt=\"Project Image\"/>\r\n            </div>\r\n            <div className=\"item-details\">\r\n                <div className=\"header\">\r\n                    <h2>Roles</h2>\r\n                    <ul>\r\n                        {item[itemIndex].roles.map((item, index) => (\r\n                            <li key={index}>{item}</li>\r\n                        ))}\r\n                    </ul>\r\n                    {item[itemIndex].description.map((item, index) => (\r\n                        <p key={index}>{item}</p>\r\n                    ))}\r\n                </div>\r\n                {/* {LinkActive?\r\n                    <ul>{Projects[itemIndex].links.map((item, index) => (\r\n                        <li key={index}>{item}</li>\r\n                    ))}</ul>\r\n                    :\r\n                    <div></div>\r\n                } */}\r\n            </div>\r\n            <div className=\"item-image-section\">\r\n                {item[itemIndex].images.map((item, index) => (\r\n                    <div className=\"item-image\" key={index} style={{backgroundColor: `${item[itemIndex].color}`}}>\r\n                        <img src={item} alt=\"Project Image\"/>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </animated.div>\r\n    )\r\n}\r\n\r\nexport default Item"],"sourceRoot":""}